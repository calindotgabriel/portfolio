---
import ProjectLayout from "../../components/ProjectLayout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  // Return paths for content collection posts only
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
const postData = post.data;
---

<ProjectLayout title={postData.title} description={postData.description}>
  <article class="blog-post">
    <header class="blog-header">
      <h1 class="blog-title">
        {postData.title}
      </h1>
      <p class="blog-description">
        {postData.description}
      </p>
      <div class="blog-meta">
        <time>{postData.publishDate.toLocaleDateString()}</time>
        <span class="author">by {postData.author}</span>
      </div>
      <div class="blog-tags">
        {
          postData.tags.map((tag: string) => (
            <span class="blog-tag">{tag}</span>
          ))
        }
      </div>
    </header>

    <div class="blog-content">
      <Content />
    </div>
  </article>
</ProjectLayout>

<style>
  /* Blog Post Styles */
  .blog-post {
    max-width: 900px;
    margin: 0 auto;
    padding: 0 24px 64px;
  }

  .blog-header {
    background: var(--gradient-primary);
    color: white;
    border-radius: 20px;
    padding: 64px 40px 48px 40px;
    text-align: center;
    margin-bottom: 3rem;
    box-shadow: var(--shadow-xl);
  }

  .blog-title {
    font-size: 3rem;
    font-weight: 800;
    margin-bottom: 1.5rem;
    letter-spacing: -0.02em;
    color: white;
    background: none;
    -webkit-background-clip: unset;
    -webkit-text-fill-color: unset;
    background-clip: unset;
    line-height: 1.1;
  }

  .blog-description {
    font-size: 1.35rem;
    color: rgba(255, 255, 255, 0.9);
    margin: 1.5rem 0;
    max-width: none;
    line-height: 1.4;
  }

  .blog-meta {
    font-size: 1rem;
    color: rgba(255, 255, 255, 0.8);
    margin-bottom: 1rem;
    font-weight: 500;
  }

  .author {
    margin-left: 1rem;
  }

  .blog-tags {
    display: flex;
    gap: 0.75rem;
    justify-content: center;
    margin-top: 1rem;
    flex-wrap: wrap;
  }

  .blog-tag {
    background: rgba(255, 255, 255, 0.25);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 50px;
    font-size: 0.9rem;
    font-weight: 600;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .blog-content {
    background: var(--white);
    border-radius: 20px;
    box-shadow: var(--shadow-xl);
    padding: 4rem 3rem;
    margin-bottom: 3rem;
    line-height: 1.8;
    border: 1px solid rgba(99, 102, 241, 0.08);
  }

  /* Blog Content Typography */
  .blog-content :global(h1) {
    font-size: 2.5rem;
    font-weight: 800;
    color: var(--dark);
    margin: 0 0 2rem 0;
    line-height: 1.2;
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .blog-content :global(h2) {
    font-size: 2rem;
    font-weight: 700;
    color: var(--dark);
    margin: 3rem 0 1.5rem 0;
    padding-bottom: 0.75rem;
    border-bottom: 3px solid var(--primary);
    position: relative;
  }

  .blog-content :global(h2)::after {
    content: "";
    position: absolute;
    bottom: -3px;
    left: 0;
    width: 60px;
    height: 3px;
    background: var(--secondary);
    border-radius: 2px;
  }

  .blog-content :global(h3) {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--dark);
    margin: 2.5rem 0 1.25rem 0;
    position: relative;
  }

  .blog-content :global(h3)::before {
    content: "▶";
    color: var(--primary);
    font-size: 0.8em;
    margin-right: 0.5rem;
  }

  .blog-content :global(p) {
    font-size: 1.125rem;
    line-height: 1.8;
    color: var(--gray);
    margin: 0 0 1.75rem 0;
    max-width: none;
  }

  .blog-content :global(ul) {
    margin: 2rem 0;
    padding-left: 0;
    list-style: none;
  }

  .blog-content :global(li) {
    font-size: 1.125rem;
    line-height: 1.7;
    color: var(--gray);
    margin: 1rem 0;
    padding-left: 2rem;
    position: relative;
  }

  .blog-content :global(li)::before {
    content: "✓";
    position: absolute;
    left: 0;
    color: var(--primary);
    font-weight: bold;
    font-size: 1.1em;
  }

  .blog-content :global(strong) {
    font-weight: 700;
    color: var(--dark);
    background: linear-gradient(
      135deg,
      var(--primary) 0%,
      var(--secondary) 100%
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .blog-content :global(code) {
    background: var(--light-gray);
    padding: 0.4rem 0.6rem;
    border-radius: 6px;
    font-size: 0.95rem;
    color: var(--primary);
    font-weight: 600;
    border: 1px solid rgba(99, 102, 241, 0.2);
  }

  /* Highlight boxes for key sections */
  .blog-content :global(p):has(strong) {
    background: linear-gradient(
      135deg,
      rgba(99, 102, 241, 0.05) 0%,
      rgba(236, 72, 153, 0.05) 100%
    );
    padding: 1.5rem;
    border-radius: 12px;
    border-left: 4px solid var(--primary);
    margin: 2rem 0;
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .blog-post {
      padding: 0 16px 48px;
    }

    .blog-header {
      padding: 48px 24px 32px 24px;
      margin-bottom: 2rem;
    }

    .blog-title {
      font-size: 2.25rem;
    }

    .blog-description {
      font-size: 1.125rem;
    }

    .blog-content {
      padding: 2.5rem 1.5rem;
      margin-bottom: 2rem;
    }

    .blog-content :global(h1) {
      font-size: 2rem;
    }

    .blog-content :global(h2) {
      font-size: 1.75rem;
    }

    .blog-content :global(h3) {
      font-size: 1.35rem;
    }

    .blog-content :global(p),
    .blog-content :global(li) {
      font-size: 1rem;
    }

    .author {
      display: block;
      margin-left: 0;
      margin-top: 0.25rem;
    }

    .blog-tags {
      gap: 0.5rem;
    }

    .blog-tag {
      font-size: 0.8rem;
      padding: 0.4rem 0.8rem;
    }
  }

  /* Smooth animations */
  .blog-header,
  .blog-content {
    animation: fadeInUp 0.6s ease forwards;
  }

  .blog-content {
    animation-delay: 0.2s;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
