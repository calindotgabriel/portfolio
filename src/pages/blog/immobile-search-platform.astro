---
import ProjectLayout from "../../components/ProjectLayout.astro";

const postData = {
  title:
    "Building a Scalable Real Estate Search Platform with React and Hapi Microservices",
  description:
    "How we built a multi-tenant property search engine with geolocation filtering for a real estate startup - handling complex user roles and map-based searches",
  publishDate: new Date("2024-07-15"),
  tags: ["React", "Hapi", "AWS", "MongoDB", "Microservices"],
  author: "CÄƒlin Gabriel",
};
---

<ProjectLayout title={postData.title} description={postData.description}>
  <article class="blog-post" style="margin-top: 3rem;">
    <header class="blog-header">
      <h1 class="blog-title">
        {postData.title}
      </h1>
      <p class="blog-description">
        {postData.description}
      </p>
      <div class="blog-meta">
        <time>{postData.publishDate.toLocaleDateString()}</time>
        <span class="author">by {postData.author}</span>
      </div>
      <div class="blog-tags">
        {
          postData.tags.map((tag: string) => (
            <span class="blog-tag">{tag}</span>
          ))
        }
      </div>
    </header>

    <div class="blog-content">
      <div class="prose">
        <h2>Business Challenge</h2>
        <p>
          <strong>Traditional real estate platforms</strong> struggled with complex
          multi-tenant requirements. Key issues included:
        </p>
        <ul>
          <li>
            <strong>Multi-role authentication</strong> - agents, buyers, landlords
            needed different access levels
          </li>
          <li>
            <strong>Geolocation complexity</strong> - precise location-based searches
            with map integration
          </li>
          <li>
            <strong>Real-time updates</strong> - instant property listing changes
            across all users
          </li>
          <li>
            <strong>Mobile performance</strong> - majority of users searched on mobile
            devices
          </li>
        </ul>

        <h2>Technical Solution: React + Hapi Microservices</h2>
        <p>
          <strong>Modern Stack Choice:</strong> React for dynamic UI, Hapi.js microservices
          for API, MongoDB for flexible data storage, AWS Lambda for scalable processing.
        </p>

        <h3>Architecture Overview</h3>
        <ul>
          <li>
            <strong>Frontend</strong> - React with TypeScript, Material-UI, Google
            Maps integration
          </li>
          <li>
            <strong>Backend</strong> - Hapi.js microservices with dedicated SSO authentication
          </li>
          <li>
            <strong>Database</strong> - MongoDB with geospatial indexing for location
            queries
          </li>
          <li>
            <strong>Infrastructure</strong> - AWS Lambda workers, SQS queues, S3
            for file storage
          </li>
          <li>
            <strong>Integrations</strong> - Salesforce CRM integration via microservices
          </li>
        </ul>
      </div>
    </div>

    <h3>Key Technical Implementation</h3>
    <p>
      <strong>Dedicated SSO Microservice:</strong> Centralized authentication service
      built with Hapi.js, handling JWT tokens and multi-role authorization for agents,
      buyers, and landlords.
    </p>
    <p>
      <strong>MongoDB Geospatial Search:</strong> 2dsphere indexes for radius-based
      property queries, calculating distances and ordering by proximity with sub-second
      response times.
    </p>
    <p>
      <strong>Salesforce Integration:</strong> Dedicated microservices with SQS queues
      and Lambda workers for syncing leads, contacts, and property data between platforms.
    </p>
    <p>
      <strong>Scalable Queue Architecture:</strong> AWS SQS for reliable message
      processing and Lambda functions for background data synchronization tasks.
    </p>

    <h2>Business Results</h2>
    <div class="results-grid">
      <div class="metric">
        <span class="number">20%</span>
        <span class="label">Higher User Engagement</span>
      </div>
      <div class="metric">
        <span class="number">3x</span>
        <span class="label">Faster Property Search</span>
      </div>
      <div class="metric">
        <span class="number">50k+</span>
        <span class="label">Properties Indexed</span>
      </div>
    </div>

    <h3>AWS Infrastructure</h3>
    <p>
      <strong>Production Setup:</strong> Lambda functions for microservices, SQS
      queues for message processing, MongoDB Atlas for managed database, S3 for property
      images with CloudFront CDN.
    </p>
    <p>
      <strong>Serverless Architecture:</strong> Hapi.js microservices deployed as
      Lambda functions with API Gateway routing and automatic scaling based on demand.
    </p>

    <h2>Key Takeaways</h2>
    <ul>
      <li>
        <strong>MongoDB geospatial indexes are powerful</strong> - 2dsphere indexes
        dramatically improved location-based search performance
      </li>
      <li>
        <strong>Dedicated SSO microservice</strong> - centralized authentication
        simplified multi-tenant user management
      </li>
      <li>
        <strong>Lambda + SQS architecture</strong> - serverless processing with queues
        provided excellent scalability for Salesforce sync
      </li>
      <li>
        <strong>Hapi.js for microservices</strong> - excellent plugin ecosystem and
        built-in validation made development faster
      </li>
    </ul>

    <div class="cta-section">
      <p>
        <strong>Building a real estate or location-based platform?</strong> I have
        deep experience with MongoDB geospatial queries, Hapi.js microservices, SSO
        architecture, and Salesforce integrations. Let's discuss your project.
      </p>
    </div>
  </article>
</ProjectLayout>

<style>
  .blog-post {
    max-width: 900px;
    margin: 0 auto;
    padding: 0 24px 3rem;
    color: var(--text-primary);
    line-height: 1.7;
  }

  .blog-header {
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 2px solid var(--gradient-primary);
    background: var(--gradient-card);
    border-radius: 16px;
    padding: 2.5rem 2rem;
    box-shadow: var(--shadow-lg);
  }

  .blog-title {
    font-size: 2.5rem;
    font-weight: 800;
    margin-bottom: 1rem;
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    line-height: 1.2;
  }

  .blog-description {
    font-size: 1.25rem;
    color: var(--gray);
    margin-bottom: 1.5rem;
    font-weight: 500;
  }

  .blog-meta {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
    font-size: 0.95rem;
    color: var(--gray);
  }

  .author {
    font-weight: 600;
    color: var(--primary);
  }

  .blog-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
  }

  .blog-tag {
    background: rgba(99, 102, 241, 0.1);
    color: var(--primary);
    padding: 0.5rem 1rem;
    border-radius: 50px;
    font-size: 0.85rem;
    font-weight: 600;
    border: 1px solid rgba(99, 102, 241, 0.2);
  }

  .blog-content {
    max-width: 100%;
  }

  .prose {
    font-size: 1.1rem;
    line-height: 1.8;
  }

  .prose h2 {
    font-size: 1.75rem;
    font-weight: 700;
    margin: 2.5rem 0 1rem;
    color: var(--text-primary);
    position: relative;
  }

  .prose h2:after {
    content: "";
    position: absolute;
    bottom: -8px;
    left: 0;
    width: 60px;
    height: 3px;
    background: var(--gradient-primary);
    border-radius: 2px;
  }

  .prose h3 {
    font-size: 1.35rem;
    font-weight: 600;
    margin: 2rem 0 1rem;
    color: var(--text-primary);
  }

  .prose p {
    margin-bottom: 1.5rem;
    color: var(--text-secondary);
  }

  .prose ul {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }

  .prose li {
    margin-bottom: 0.75rem;
    color: var(--text-secondary);
  }

  .prose strong {
    color: var(--text-primary);
    font-weight: 600;
  }

  .prose pre {
    background: var(--code-bg);
    border-radius: 12px;
    padding: 1.5rem;
    margin: 1.5rem 0;
    overflow-x: auto;
    border: 1px solid var(--border);
    font-size: 0.9rem;
    line-height: 1.6;
  }

  .prose code {
    color: var(--code-text);
    font-family: "Fira Code", "Menlo", "Monaco", monospace;
  }

  .results-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
    margin: 2rem 0;
  }

  .metric {
    background: var(--gradient-card);
    padding: 1.5rem;
    border-radius: 12px;
    text-align: center;
    box-shadow: var(--shadow-md);
    border: 1px solid rgba(99, 102, 241, 0.1);
  }

  .metric .number {
    display: block;
    font-size: 2rem;
    font-weight: 800;
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 0.5rem;
  }

  .metric .label {
    font-size: 0.95rem;
    font-weight: 600;
    color: var(--text-secondary);
  }

  .cta-section {
    background: var(--gradient-card);
    padding: 2rem;
    border-radius: 16px;
    margin-top: 3rem;
    text-align: center;
    border: 2px solid rgba(99, 102, 241, 0.1);
  }

  .cta-section p {
    margin: 0;
    font-size: 1.1rem;
    color: var(--text-primary);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .blog-post {
      padding: 0 16px 2rem;
    }

    .blog-header {
      padding: 2rem 1.5rem;
      margin-bottom: 2rem;
    }

    .blog-title {
      font-size: 2rem;
    }

    .blog-description {
      font-size: 1.1rem;
    }

    .blog-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    .prose {
      font-size: 1rem;
    }

    .prose h2 {
      font-size: 1.5rem;
    }

    .prose h3 {
      font-size: 1.25rem;
    }

    .results-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .metric .number {
      font-size: 1.75rem;
    }

    .author {
      display: block;
      margin-left: 0;
      margin-top: 0.25rem;
    }

    .blog-tags {
      gap: 0.5rem;
    }

    .blog-tag {
      font-size: 0.8rem;
      padding: 0.4rem 0.8rem;
    }
  }

  /* Smooth animations */
  .blog-header,
  .blog-content {
    animation: fadeInUp 0.6s ease forwards;
  }

  .blog-content {
    animation-delay: 0.2s;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
